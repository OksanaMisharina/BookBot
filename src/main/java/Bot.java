import org.glassfish.grizzly.utils.ArrayUtils;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

public class Bot extends TelegramLongPollingBot {

    private Book books = new Book();
    private String chat_id;
    private String lastMessage = "";
    ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();

    @Override
    public void onUpdateReceived(Update update) {


        update.getUpdateId();

        chat_id = String.valueOf(update.getMessage().getChatId());
        SendMessage sendMessage = new SendMessage().setChatId(chat_id);

        sendMessage.setReplyMarkup(replyKeyboardMarkup); //—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sendMessage.setText(getMessage(update.getMessage().getText())); //–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try {

            execute(sendMessage);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }

    }

    private void searchPanel() {
        ArrayList<KeyboardRow> keyboard = new ArrayList<>();

        KeyboardRow keyboardRow1 = new KeyboardRow();
        KeyboardRow keyboardRow2 = new KeyboardRow();

        replyKeyboardMarkup.setResizeKeyboard(true);
        keyboard.clear(); //—á–∏—Å—Ç–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

        keyboardRow1.add("–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é");
        keyboardRow1.add("–ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É");
        keyboardRow2.add("–ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º");

        keyboard.add(keyboardRow1);
        keyboard.add(keyboardRow2);
        replyKeyboardMarkup.setKeyboard(keyboard);
    }


    public String getMessage(String msg) {              //–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞

        String[] subj = {
                "ARCHITECTURE", "ART", "BIOGRAPHY & AUTOBIOGRAPHY", "BUSINESS & ECONOMICS",
                "COMICS & GRAPHIC NOVELS", "COMPUTERS", "COOKING", "CRAFTS & HOBBIES", "DESIGN", "DRAMA",
                "EDUCATION", "FICTION", "FOREIGN LANGUAGE STUDY", "HISTORY", "LAW",
                "MATHEMATICS", "MEDICAL", "MUSIC", "PHILOSOPHY", "PHOTOGRAPHY", "POETRY", "SCIENCE"};
        String[] subjRu = {
                "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –∏ –∞–≤—Ç–æ–±–∏–æ–≥—Ä–∞—Ñ–∏—è", "–ë–∏–∑–Ω–µ—Å –∏ —ç–∫–æ–Ω–æ–º–∏–∫–∞",
                "–ö–æ–º–∏–∫—Å—ã –∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–æ–º–∞–Ω—ã", "–ö–æ–º–ø—å—é—Ç–µ—Ä—ã", "–ì–æ—Ç–æ–≤–∫–∞", "–•–æ–±–±–∏", "–î–∏–∑–∞–π–Ω", "–î—Ä–∞–º–∞",
                "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏",  "–ò—Å—Ç–æ—Ä–∏—è","–ó–∞–∫–æ–Ω",
                "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", "–ú–µ–¥–∏—Ü–∏–Ω–∞", "–ú—É–∑—ã–∫–∞", "–§–∏–ª–æ—Å–æ—Ñ–∏—è", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–ü–æ—ç–∑–∏—è", "–ù–∞—É–∫–∞"};

        System.out.println("-------------------------------------------");
        System.out.println(msg);
        switch (lastMessage.toLowerCase()) {
            case "–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é":
            case "–ø–æ –∞–≤—Ç–æ—Ä—É":{
                ArrayList<String> bookList = books.searchBook(lastMessage, msg);
                lastMessage = "";
                searchPanel();
                return getBooksInfo(bookList);
            }
            case "–ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º": {
                int subIndex = ArrayUtils.indexOf(subjRu, msg);
                ArrayList<String> bookList = books.searchBook(lastMessage, subj[subIndex]);
                lastMessage = "";
                searchPanel();
                return getBooksInfo(bookList);
            }
        }

        switch (msg.toLowerCase()) {
            case "–ø—Ä–∏–≤–µ—Ç": {
                String[] answers = {"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å", "–ú–æ–µ –ø–æ—á—Ç–µ–Ω–∏–µ", "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–ë–æ–Ω–∂—É—Ä", "–•–µ–ª–ª–æ—É"};

                SendMessage sendMessage = new SendMessage().setChatId(chat_id);
                sendMessage.setText(answers[new Random().nextInt(answers.length)]); // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
                try {
                    execute(sendMessage);
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
                return ("–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–ø–æ–∏—Å–∫\"");// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
            }
            case "–ø–æ–∏—Å–∫": {

                searchPanel();
                return "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞ üçÄ";
            }
            case "–ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é": {
                lastMessage = "–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é";
                return "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏";
            }
            case "–ø–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É": {
                lastMessage = "–ø–æ –∞–≤—Ç–æ—Ä—É";
                return "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–≤—Ç–æ—Ä–∞";
            }
            case "–ø–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º": {

                ArrayList<KeyboardRow> keyboard = new ArrayList<>();

                replyKeyboardMarkup.setResizeKeyboard(true);
                try {

                    for (int i = 1; i <= 11; i++) {
                        KeyboardRow keyboardRow = new KeyboardRow();
                        keyboardRow.add(subjRu[i * 2 - 2]);
                        keyboardRow.add(subjRu[i * 2 - 1]);

                        keyboard.add(keyboardRow);
                        replyKeyboardMarkup.setKeyboard(keyboard);
                    }
                } catch (IndexOutOfBoundsException e) {
                    System.out.println(e.getMessage());
                }

                lastMessage = "–ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º";
                return "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é";
            }
            default:
                lastMessage = "";
                return "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é";
        }

    }

        public String getBooksInfo (ArrayList < String > bookList) {

            if (bookList.isEmpty())
                return "–ü–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ";

            SendMessage sendMessage = new SendMessage().setChatId(chat_id);
            for (String book : bookList) {
                try {
                    sendMessage.setText(book);
                    execute(sendMessage);
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
            }
            return "\uD83D\uDC40";
        }

        @Override
        public String getBotUsername () {
            return "@MyBookSearchBot";
        }

        @Override
        public String getBotToken () {
            return "1791148758:AAENguxobQLA1SASpkYP7_4nKUXs45ehdbc";
        }
    }
